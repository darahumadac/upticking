@model Upticking.Models.LoginModel

@{
    ViewBag.Title = "Log in";
}

<div id="loginDiv" class="body-container col-lg-12">
    <div class="content-header container">
        <h3 class="col-lg-4">Login / Register your Account</h3>
        <h3 class="col-lg-5">
            Don't like to register?<br/>
            Login with one of these accounts
        </h3>
        <h3 class="col-lg-3">Why Register?</h3>
    </div>
    <div id="loginForm" class="container content-container">
        <form role="form" class="col-lg-4">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="form-group">
                @Html.EditorFor(m => m.IsMember)
                <small>@Html.LabelFor(m => m.IsMember, "I am already a member of Upticking")</small>
                @Html.ValidationMessageFor(m => m.IsMember)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Email, "Please enter your e-mail address")
                <span class="required">*</span>
                <div><small>@Html.ValidationMessageFor(m => m.Email)</small></div>
                <div class="login-input">
                    @Html.EditorFor(m => m.Email, new { @class = "col-lg-6" })
                    @*<small>@Html.ValidationMessageFor(m => m.Email)</small>*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, "Please enter your password")
                <span class="required">*</span>
                <div><small>@Html.ValidationMessageFor(m => m.Password)</small></div>
                <div class="login-input">
                    @Html.EditorFor(m => m.Password)
                    @*<small>@Html.ValidationMessageFor(m => m.Password)</small>*@
                </div>
            </div>
            <div class="form-group account-options">
                @Html.ActionLink("Forgot your password?", "ResetPassword", "Account")
                @Html.EditorFor(m => m.RememberMe)
                <small>@Html.Label("Remember Me")</small>
            </div>
            <div class="form-group">
                <input id="loginBtn" type="submit" class="btn btn-default col-lg-4" value="Log in" />
            </div>
        </form>
        <div id="socialmedia-login" class="col-lg-5 login-panels">
            <button class="btn btn-default col-lg-3">Facebook</button>
            <button class="btn btn-default col-lg-3">Google</button>
        </div>
        <div id="why-register" class="col-lg-3 login-panels">
           <ol class="round">
               <li class="one">
                   Upload your properties for listing
               </li>
               <li class="two">
                   Set email search alerts based on your chosen criteria
               </li>
               <li class="three">
                   Get notifications and newsletters
               </li>
           </ol>
        </div>
    </div>

</div>

@*<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
</hgroup>*@

@*<section id="loginForm">
<h2>Use a local account to log in.</h2>
@using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Log in Form</legend>
        <ol>
            <li>
                @Html.LabelFor(m => m.UserName)
                @Html.TextBoxFor(m => m.UserName)
                @Html.ValidationMessageFor(m => m.UserName)
            </li>
            <li>
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </li>
            <li>
                @Html.CheckBoxFor(m => m.RememberMe)
                @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox" })
            </li>
        </ol>
        <input type="submit" value="Log in" />
    </fieldset>
    <p>
        @Html.ActionLink("Register", "Register") if you don't have an account.
    </p>
}
</section>

<section class="social" id="socialLoginForm">
    <h2>Use another service to log in.</h2>
    @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
</section>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
